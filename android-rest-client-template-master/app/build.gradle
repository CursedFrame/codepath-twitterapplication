apply plugin: 'com.android.application'

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.codepath.apps.restclienttemplate"
        minSdkVersion 21
        targetSdkVersion 28

        // Room schemas
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        buildConfigField("String", "CONSUMER_KEY", apikeyProperties['CONSUMER_KEY'])
        buildConfigField("String", "CONSUMER_SECRET", apikeyProperties['CONSUMER_SECRET'])

        // Allow vectorDrawables library
        vectorDrawables.useSupportLibrary = true
    }

    // Related to https://github.com/scribejava/scribejava/issues/480
    // Scribe expects Java 7 or this custom Apache library
    lintOptions {
        lintConfig rootProject.file('gradle/lint.xml')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    buildFeatures {
        viewBinding true
    }
}
ext {
    appCompatVersion = '1.0.0'
    designSupportVersion = '1.0.0'
    recyclerViewVersion = '1.0.0'
    roomVersion = "2.1.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'com.codepath.libraries:android-oauth-handler:2.2.0'
    implementation 'commons-codec:commons-codec:1.10'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    // Glide for remote image loading
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Glide transformations
    implementation 'jp.wasabeef:glide-transformations:4.1.0'
    implementation 'jp.co.cyberagent.android:gpuimage:2.0.4'

    // Room for simple persistence with an ORM
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation 'com.facebook.stetho:stetho:1.5.1'

    // SwipeRefreshLayout for swiping to refresh data
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Parceler library for parceling data
    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'

    // Design Support library for better design
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "com.google.android.material:material:${designSupportVersion}"

    // Percent support library
    implementation "androidx.percentlayout:percentlayout:1.0.0"

    // Vector drawables library
    implementation "androidx.vectordrawable:vectordrawable:1.1.0" // VectorDrawableCompat
    implementation "androidx.vectordrawable:vectordrawable-animated:1.1.0" // AnimatedVectorDrawableCompat

    // Room for simple persistence with an ORM
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"

    // material.io library
    api 'com.google.android.material:material:1.3.0-alpha01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.3.0-rc01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-rc01'
}
